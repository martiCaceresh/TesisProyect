// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptiArroz_Tesis_Proyect.Data;

#nullable disable

namespace OptiArroz_Tesis_Proyect.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CodeExpiration")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordResetCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Notification", b =>
                {
                    b.Property<int>("IdNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdNotificationType")
                        .HasColumnType("int");

                    b.Property<string>("IdSendTo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReadAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WasRead")
                        .HasColumnType("int");

                    b.HasKey("IdNotification");

                    b.HasIndex("IdNotificationType");

                    b.HasIndex("IdSendTo");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.NotificationType", b =>
                {
                    b.Property<int>("IdNotificationType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FrecuencyAfterFirstNotification")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PriorNotificationDays")
                        .HasColumnType("int");

                    b.HasKey("IdNotificationType");

                    b.ToTable("NotificationTypes");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceClass", b =>
                {
                    b.Property<int>("IdClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdClass");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceClasses");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceClassification", b =>
                {
                    b.Property<int>("IdClassification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdRiceClass")
                        .HasColumnType("int");

                    b.Property<int>("IdRiceGrade")
                        .HasColumnType("int");

                    b.Property<int>("IdRiceSack")
                        .HasColumnType("int");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("MaximunStock")
                        .HasColumnType("int");

                    b.Property<int>("MinimunStock")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SacksPerLot")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdClassification");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdRiceClass");

                    b.HasIndex("IdRiceGrade");

                    b.HasIndex("IdRiceSack");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceClassifications");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceGrade", b =>
                {
                    b.Property<int>("IdGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdGrade");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceGrades");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceLot", b =>
                {
                    b.Property<int>("IdLot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClassification")
                        .HasColumnType("int");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("IdLastUbication")
                        .HasColumnType("int");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdZone")
                        .HasColumnType("int");

                    b.Property<int>("InitialQuantity")
                        .HasColumnType("int");

                    b.Property<int>("LeftoverQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceptionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<byte[]>("TechnicalSpecification")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdLot");

                    b.HasIndex("IdClassification");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdLastUbication")
                        .IsUnique();

                    b.HasIndex("IdUpdatedBy");

                    b.HasIndex("IdZone");

                    b.ToTable("RiceLots");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceLotMovement", b =>
                {
                    b.Property<int>("IdRiceLotMovement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("IdDestination")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrigin")
                        .HasColumnType("int");

                    b.Property<int>("IdRiceLot")
                        .HasColumnType("int");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdZoneDestination")
                        .HasColumnType("int");

                    b.Property<int>("IdZoneOrigin")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RiceLotMovementDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdRiceLotMovement");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdDestination");

                    b.HasIndex("IdOrigin");

                    b.HasIndex("IdRiceLot");

                    b.HasIndex("IdUpdatedBy");

                    b.HasIndex("IdZoneDestination");

                    b.HasIndex("IdZoneOrigin");

                    b.ToTable("RiceLotMovements");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSack", b =>
                {
                    b.Property<int>("IdSack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdSack");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceSacks");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolution", b =>
                {
                    b.Property<int>("IdRiceSacksDevolution")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdRiceSacksDevolutionType")
                        .HasColumnType("int");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RiceSacksDevolutionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdRiceSacksDevolution");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceSacksDevolutions");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolutionDetail", b =>
                {
                    b.Property<int>("IdRiceSacksDevolutionDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdRiceLot")
                        .HasColumnType("int");

                    b.Property<int>("IdRiceSacksDevolution")
                        .HasColumnType("int");

                    b.Property<int>("SacksQuantity")
                        .HasColumnType("int");

                    b.HasKey("IdRiceSacksDevolutionDetail");

                    b.HasIndex("IdRiceLot");

                    b.HasIndex("IdRiceSacksDevolution");

                    b.ToTable("RiceSacksDevolutionDetails");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolutionType", b =>
                {
                    b.Property<int>("IdRiceSackDevolutionType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdRiceSackDevolutionType");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceSacksDevolutionTypes");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutput", b =>
                {
                    b.Property<int>("IdRiceSacksOutput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdRiceSacksOutputType")
                        .HasColumnType("int");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("OutputEvidence")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("RiceSacksOutputDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdRiceSacksOutput");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdRiceSacksOutputType");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceSacksOutputs");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutputDetail", b =>
                {
                    b.Property<int>("IdRiceSacksOutputDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdRiceLot")
                        .HasColumnType("int");

                    b.Property<int>("IdRiceSacksOutput")
                        .HasColumnType("int");

                    b.Property<int>("SacksQuantity")
                        .HasColumnType("int");

                    b.HasKey("IdRiceSacksOutputDetail");

                    b.HasIndex("IdRiceLot");

                    b.HasIndex("IdRiceSacksOutput");

                    b.ToTable("RiceSacksOutputDetails");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutputType", b =>
                {
                    b.Property<int>("IdRiceSacksOutputType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdRiceSacksOutputType");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("RiceSacksOutputTypes");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.SystemConfiguration", b =>
                {
                    b.Property<int>("IdSystemConfiguration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdClasses")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdGrades")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaximunStocks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MinimunStocks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherZoneDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherZoneHeight")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherZoneLength")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherZoneNames")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherZoneWidth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PalletLength")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PalletWidth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QuatitiesSacksPerLot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sacks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SacksWeight")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WarehouseColumns")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WarehouseDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WarehouseHeight")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WarehouseLength")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WarehouseNames")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WarehouseRows")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WarehouseWidth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdSystemConfiguration");

                    b.ToTable("SystemConfiguration");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Ubication", b =>
                {
                    b.Property<int>("IdUbication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<int?>("IdCurrentRiceLot")
                        .HasColumnType("int");

                    b.Property<int>("IdZone")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("IdUbication");

                    b.HasIndex("IdZone");

                    b.ToTable("Ubications");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Zone", b =>
                {
                    b.Property<int>("IdZone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Columns")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("IdCreatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdUpdatedBy")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdZone");

                    b.HasIndex("IdCreatedBy");

                    b.HasIndex("IdUpdatedBy");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Notification", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.NotificationType", "NotificationType")
                        .WithMany("Notifications")
                        .HasForeignKey("IdNotificationType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "SentTo")
                        .WithMany("Notifications")
                        .HasForeignKey("IdSendTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("SentTo");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceClass", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceClassesCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceClassesUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceClassification", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceClassificationsCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceClass", "RiceClass")
                        .WithMany("RiceClassifications")
                        .HasForeignKey("IdRiceClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceGrade", "RiceGrade")
                        .WithMany("RiceClassifications")
                        .HasForeignKey("IdRiceGrade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceSack", "RiceSack")
                        .WithMany("RiceClassifications")
                        .HasForeignKey("IdRiceSack")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceClassificationsUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("RiceClass");

                    b.Navigation("RiceGrade");

                    b.Navigation("RiceSack");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceGrade", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceGradesCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceGradesUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceLot", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceClassification", "RiceClassification")
                        .WithMany("RiceLots")
                        .HasForeignKey("IdClassification")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceLotsCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.Ubication", "LastUbication")
                        .WithOne("CurrentRiceLot")
                        .HasForeignKey("OptiArroz_Tesis_Proyect.Models.Entities.RiceLot", "IdLastUbication")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceLotsUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.Zone", "Zone")
                        .WithMany("RiceLots")
                        .HasForeignKey("IdZone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("LastUbication");

                    b.Navigation("RiceClassification");

                    b.Navigation("UpdatedBy");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceLotMovement", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceLotMovementsCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.Ubication", "Destination")
                        .WithMany("RiceLotMovementDestinations")
                        .HasForeignKey("IdDestination");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.Ubication", "Origin")
                        .WithMany("RiceLotMovementOrigins")
                        .HasForeignKey("IdOrigin");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceLot", "RiceLot")
                        .WithMany("RiceLotMovements")
                        .HasForeignKey("IdRiceLot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceLotMovementsUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.Zone", "ZoneDestination")
                        .WithMany("RiceLotMovementZoneDestinations")
                        .HasForeignKey("IdZoneDestination")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.Zone", "ZoneOrigin")
                        .WithMany("RiceLotMovementZoneOrigins")
                        .HasForeignKey("IdZoneOrigin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Destination");

                    b.Navigation("Origin");

                    b.Navigation("RiceLot");

                    b.Navigation("UpdatedBy");

                    b.Navigation("ZoneDestination");

                    b.Navigation("ZoneOrigin");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSack", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceSacksCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceSacksUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolution", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceSacksDevolutionsCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolutionType", "RiceSacksDevolutionType")
                        .WithMany("RiceSacksDevolutions")
                        .HasForeignKey("IdRiceSacksDevolution")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceSacksDevolutionsUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("RiceSacksDevolutionType");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolutionDetail", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceLot", "RiceLot")
                        .WithMany("RiceSacksDevolutionDetails")
                        .HasForeignKey("IdRiceLot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolution", "RiceSacksDevolution")
                        .WithMany("RiceSacksDevolutionDetails")
                        .HasForeignKey("IdRiceSacksDevolution")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiceLot");

                    b.Navigation("RiceSacksDevolution");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolutionType", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceSacksDevolutionTypesCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceSacksDevolutionTypesUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutput", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceSacksOutputsCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutputType", "RiceSacksOutputType")
                        .WithMany("RiceSacksOutputs")
                        .HasForeignKey("IdRiceSacksOutputType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceSacksOutputsUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("RiceSacksOutputType");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutputDetail", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceLot", "RiceLot")
                        .WithMany("RiceSacksOutputDetails")
                        .HasForeignKey("IdRiceLot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutput", "RiceSacksOutput")
                        .WithMany("RiceSacksOutputDetails")
                        .HasForeignKey("IdRiceSacksOutput")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiceLot");

                    b.Navigation("RiceSacksOutput");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutputType", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("RiceSacksOutputTypesCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("RiceSacksOutputTypesUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Ubication", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.Zone", "Zone")
                        .WithMany("Ubications")
                        .HasForeignKey("IdZone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Zone", b =>
                {
                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "CreatedBy")
                        .WithMany("ZonesCreated")
                        .HasForeignKey("IdCreatedBy");

                    b.HasOne("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", "UpdatedBy")
                        .WithMany("ZonesUpdated")
                        .HasForeignKey("IdUpdatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("RiceClassesCreated");

                    b.Navigation("RiceClassesUpdated");

                    b.Navigation("RiceClassificationsCreated");

                    b.Navigation("RiceClassificationsUpdated");

                    b.Navigation("RiceGradesCreated");

                    b.Navigation("RiceGradesUpdated");

                    b.Navigation("RiceLotMovementsCreated");

                    b.Navigation("RiceLotMovementsUpdated");

                    b.Navigation("RiceLotsCreated");

                    b.Navigation("RiceLotsUpdated");

                    b.Navigation("RiceSacksCreated");

                    b.Navigation("RiceSacksDevolutionTypesCreated");

                    b.Navigation("RiceSacksDevolutionTypesUpdated");

                    b.Navigation("RiceSacksDevolutionsCreated");

                    b.Navigation("RiceSacksDevolutionsUpdated");

                    b.Navigation("RiceSacksOutputTypesCreated");

                    b.Navigation("RiceSacksOutputTypesUpdated");

                    b.Navigation("RiceSacksOutputsCreated");

                    b.Navigation("RiceSacksOutputsUpdated");

                    b.Navigation("RiceSacksUpdated");

                    b.Navigation("ZonesCreated");

                    b.Navigation("ZonesUpdated");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.NotificationType", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceClass", b =>
                {
                    b.Navigation("RiceClassifications");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceClassification", b =>
                {
                    b.Navigation("RiceLots");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceGrade", b =>
                {
                    b.Navigation("RiceClassifications");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceLot", b =>
                {
                    b.Navigation("RiceLotMovements");

                    b.Navigation("RiceSacksDevolutionDetails");

                    b.Navigation("RiceSacksOutputDetails");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSack", b =>
                {
                    b.Navigation("RiceClassifications");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolution", b =>
                {
                    b.Navigation("RiceSacksDevolutionDetails");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksDevolutionType", b =>
                {
                    b.Navigation("RiceSacksDevolutions");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutput", b =>
                {
                    b.Navigation("RiceSacksOutputDetails");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.RiceSacksOutputType", b =>
                {
                    b.Navigation("RiceSacksOutputs");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Ubication", b =>
                {
                    b.Navigation("CurrentRiceLot");

                    b.Navigation("RiceLotMovementDestinations");

                    b.Navigation("RiceLotMovementOrigins");
                });

            modelBuilder.Entity("OptiArroz_Tesis_Proyect.Models.Entities.Zone", b =>
                {
                    b.Navigation("RiceLotMovementZoneDestinations");

                    b.Navigation("RiceLotMovementZoneOrigins");

                    b.Navigation("RiceLots");

                    b.Navigation("Ubications");
                });
#pragma warning restore 612, 618
        }
    }
}
