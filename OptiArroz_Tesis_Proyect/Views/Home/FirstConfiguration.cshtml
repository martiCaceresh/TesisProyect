@using OptiArroz_Tesis_Proyect.Models.Utils
@model OptiArroz_Tesis_Proyect.Models.ViewModels.FirstConfigurationVM

@{
    Layout = null;
    ViewData["Title"] = "Configuracion inicial";
}



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="../../" />
    <meta name="description" content="Herramienta de gestión de Fichas" />
    <meta name="keywords" content="SISCOP" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content="SISCOP" />
    <meta property="og:url" content="https://keenthemes.com/metronic" />
    <meta property="og:site_name" content="Keenthemes | Metronic" />
    <link rel="canonical" href="https://preview.keenthemes.com/metronic8" />
    <link rel="shortcut icon" href="assets/media/logos/favicon.ico" />
    <!--begin::Fonts(mandatory for all pages)-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700" />
    <!--end::Fonts-->
    <!--begin::Global Stylesheets Bundle(mandatory for all pages)-->
    <link href="assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
    <link href="assets/css/style.bundle.css" rel="stylesheet" type="text/css" />
    <!--end::Global Stylesheets Bundle-->
    <script>// Frame-busting to prevent site from being loaded within a frame without permission (click-jacking) if (window.top != window.self) { window.top.location.replace(window.self.location.href); }</script>
</head>
<!--begin::Body-->
<body id="kt_body">
    <!--begin::Theme mode setup on page load-->
    <script>var defaultThemeMode = "light"; var themeMode; if (document.documentElement) { if (document.documentElement.hasAttribute("data-bs-theme-mode")) { themeMode = document.documentElement.getAttribute("data-bs-theme-mode"); } else { if (localStorage.getItem("data-bs-theme") !== null) { themeMode = localStorage.getItem("data-bs-theme"); } else { themeMode = defaultThemeMode; } } if (themeMode === "system") { themeMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"; } document.documentElement.setAttribute("data-bs-theme", themeMode); }</script>
    <!--end::Theme mode setup on page load-->
    <!--start::Style-->
    <style>
        .form-control {
            text-transform: uppercase;
        }

        .modal-dialog-custom-lg {
            max-width: 90%;
        }

        .page-loader {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 9999;
            visibility: hidden;
        }

        .circle {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-right: 10px;
        }



    </style>
    <!--end::Style-->

    <!--begin::Root-->
    
    <a id="btnOpenModal" class="btn btn-sm btn-primary me-2 mb-2" data-bs-toggle="modal" data-bs-target="#kt_modal_1" style="display: none;"></a>

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
        <!-- Tu código HTML/CSHTML existente -->
        <!--begin::Javascript-->
        <script>var hostUrl = "assets/";</script>
        <!--begin::Global Javascript Bundle(mandatory for all pages)-->
        <script src="assets/plugins/global/plugins.bundle.js"></script>
        <script src="assets/js/scripts.bundle.js"></script>
        <!--end::Global Javascript Bundle-->
        <!--begin: General scripts-->
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var modal = new bootstrap.Modal(document.getElementById('kt_modal_1'), {
                    backdrop: 'static', // Evita que el modal se cierre al hacer clic fuera
                    keyboard: false // Evita que se cierre con la tecla Esc
                });
                // Obtener el botón y hacer clic en él
                var btn = document.getElementById("btnOpenModal");
                btn.click();
            });


            document.addEventListener("keydown", function (event) {
                if (event.key === "Enter") {
                    // Simula el clic en el botón "Siguiente"
                    event.preventDefault(); // Evita comportamientos por defecto del Enter
                    $('[data-kt-element*="-next"]:visible').click();
                }
            });

            // Función para mostrar el Page Loader
            function showPageLoader() {
                const pageLoader = document.querySelector(".page-loader");
                pageLoader.style.visibility = "visible"; // Mostrar el Page Loader
            }
            // Función para ocultar el Page Loader
            function hidePageLoader() {
                const pageLoader = document.querySelector(".page-loader");
                pageLoader.style.visibility = "hidden"; // Ocultar el Page Loader
            }
            // También puedes ocultar el Page Loader después de que se complete la carga
            window.addEventListener("load", hidePageLoader);

            function Create() {
                const form = document.getElementById('kt_modal_create_app_form');

                // Arrays para almacenar los valores de los repeaters
                var Sacks = [];

                var IdGrades = [];
                var IdClasses = [];
                var SacksWeight = [];
                var MinimunStocks = [];
                var MaximunStocks = [];
                var QuatitiesSacksPerLot = [];

                var WarehouseNames = [];
                var WarehouseDescription = [];
                var WarehouseLength = [];
                var WarehouseWidth = [];
                var WarehouseHeight = [];
                var WarehouseRows = [];
                var WarehouseColumns = [];

                var OtherZoneNames = [];
                var OtherZoneDescription = [];
                var OtherZoneLength = [];
                var OtherZoneWidth = [];
                var OtherZoneHeight = [];


                $('[data-repeater-sack]').each(function (index) {
                    if (index !== 1) Sacks.push($(this).val().trim());
                });

                // Itera sobre los elementos de entrada en los repeaters para Classification
                $('[data-repeater-ricegrade]').each(function (index) {
                    if (index !== 1) IdGrades.push($(this).val().trim());
                });

                $('[data-repeater-riceclass]').each(function (index) {
                    if (index !== 1) IdClasses.push($(this).val().trim());
                });

                $('[data-repeater-ricesack]').each(function (index) {
                    if (index !== 1) SacksWeight.push($(this).val().trim());
                });

                $('[data-repeater-minimunstock]').each(function (index) {
                    if (index !== 1) MinimunStocks.push($(this).val().trim());
                });

                $('[data-repeater-maximunstock]').each(function (index) {
                    if (index !== 1) MaximunStocks.push($(this).val().trim());
                });

                $('[data-repeater-sacksperlot]').each(function (index) {
                    if (index !== 1) QuatitiesSacksPerLot.push($(this).val().trim());
                });


                // Logs para Classification
                console.log('IdGrades:', IdGrades);
                console.log('IdClasses:', IdClasses);
                console.log('SacksWeight:', SacksWeight);
                console.log('MinimunStocks:', MinimunStocks);
                console.log('MaximunStocks:', MaximunStocks);
                console.log('QuatitiesSacksPerLot:', QuatitiesSacksPerLot);

                // Itera sobre los elementos de entrada en los repeaters para Warehouse
                $('[data-repeater-warehousename]').each(function (index) {
                    if (index !== 1) WarehouseNames.push($(this).val().trim());
                });

                $('[data-repeater-warehousedescription]').each(function (index) {
                    if (index !== 1) WarehouseDescription.push($(this).val().trim());
                });

                $('[data-repeater-warehouselength]').each(function (index) {
                    if (index !== 1) WarehouseLength.push($(this).val().trim());
                });

                $('[data-repeater-warehousewidth]').each(function (index) {
                    if (index !== 1) WarehouseWidth.push($(this).val().trim());
                });

                $('[data-repeater-warehouseheight]').each(function (index) {
                    if (index !== 1) WarehouseHeight.push($(this).val().trim());
                });

                $('[data-repeater-warehouserow]').each(function (index) {
                    if (index !== 1) WarehouseRows.push($(this).val().trim());
                });

                $('[data-repeater-warehousecolumn]').each(function (index) {
                    if (index !== 1)WarehouseColumns.push($(this).val().trim());
                });

                // Logs para Warehouse
                console.log('WarehouseNames:', WarehouseNames);
                console.log('WarehouseDescription:', WarehouseDescription);
                console.log('WarehouseLength:', WarehouseLength);
                console.log('WarehouseWidth:', WarehouseWidth);
                console.log('WarehouseHeight:', WarehouseHeight);
                console.log('WarehouseRows:', WarehouseRows);
                console.log('WarehouseColumns:', WarehouseColumns);

                // Itera sobre los elementos de entrada en los repeaters para OtherZone
                $('[data-repeater-otherzonename]').each(function (index) {
                    if (index !== 1) OtherZoneNames.push($(this).val().trim());
                    
                });

                $('[data-repeater-otherzonedescription]').each(function (index) {

                    if (index !== 1) OtherZoneDescription.push($(this).val().trim());
                });

                $('[data-repeater-otherzonelength]').each(function (index) {
                    if (index !== 1) OtherZoneLength.push($(this).val().trim());
                });

                $('[data-repeater-otherzonewidth]').each(function (index) {
                    if (index !== 1) OtherZoneWidth.push($(this).val().trim());
                });

                $('[data-repeater-otherzoneheight]').each(function (index) {
                    if (index !== 1) OtherZoneHeight.push($(this).val().trim());
                });

                // Logs para OtherZone
                console.log('OtherZoneNames:', OtherZoneNames);
                console.log('OtherZoneDescription:', OtherZoneDescription);
                console.log('OtherZoneLength:', OtherZoneLength);
                console.log('OtherZoneWidth:', OtherZoneWidth);
                console.log('OtherZoneHeight:', OtherZoneHeight);

                // Asigna los valores a los inputs ocultos y muestra en consola
                $('#Sacks').val(Sacks.toString());
                $('#IdGrades').val(IdGrades.toString());
                console.log('IdGrades:', $('#IdGrades').val());

                $('#IdClasses').val(IdClasses.toString());
                console.log('IdClasses:', $('#IdClasses').val());

                $('#SacksWeight').val(SacksWeight.toString());
                console.log('SacksWeight:', $('#SacksWeight').val());

                $('#MinimunStocks').val(MinimunStocks.toString());
                console.log('MinimunStocks:', $('#MinimunStocks').val());

                $('#MaximunStocks').val(MaximunStocks.toString());
                console.log('MaximunStocks:', $('#MaximunStocks').val());

                $('#QuatitiesSacksPerLot').val(QuatitiesSacksPerLot.toString());
                console.log('QuatitiesSacksPerLot:', $('#QuatitiesSacksPerLot').val());


                // Warehouse
                $('#WarehouseNames').val(WarehouseNames.toString());
                console.log('WarehouseNames:', $('#WarehouseNames').val());

                $('#WarehouseDescription').val(WarehouseDescription.toString());
                console.log('WarehouseDescription:', $('#WarehouseDescription').val());

                $('#WarehouseLength').val(WarehouseLength.toString());
                console.log('WarehouseLength:', $('#WarehouseLength').val());

                $('#WarehouseWidth').val(WarehouseWidth.toString());
                console.log('WarehouseWidth:', $('#WarehouseWidth').val());

                $('#WarehouseHeight').val(WarehouseHeight.toString());
                console.log('WarehouseHeight:', $('#WarehouseHeight').val());

                $('#WarehouseRows').val(WarehouseRows.toString());
                console.log('WarehouseRows:', $('#WarehouseRows').val());

                $('#WarehouseColumns').val(WarehouseColumns.toString());
                console.log('WarehouseColumns:', $('#WarehouseColumns').val());

                // Other Zone
                $('#OtherZoneNames').val(OtherZoneNames.toString());
                console.log('OtherZoneNames:', $('#OtherZoneNames').val());

                $('#OtherZoneDescription').val(OtherZoneDescription.toString());
                console.log('OtherZoneDescription:', $('#OtherZoneDescription').val());

                $('#OtherZoneLength').val(OtherZoneLength.toString());
                console.log('OtherZoneLength:', $('#OtherZoneLength').val());

                $('#OtherZoneWidth').val(OtherZoneWidth.toString());
                console.log('OtherZoneWidth:', $('#OtherZoneWidth').val());

                $('#OtherZoneHeight').val(OtherZoneHeight.toString());
                console.log('OtherZoneHeight:', $('#OtherZoneHeight').val());



                // Confirmación de envío
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¿Deseas enviar el formulario?",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, enviar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        //MOSTRAR SPINNER
                        $('#submitButton').prop('disabled', true); // Deshabilitar el botón
                        $('#btnGuardar').hide(); // Ocultar el texto
                        $('.indicator-progress').show(); // Mostrar el spinner
                        // Envía el formulario
                        form.submit();
                    }
                });
            }


        </script>
        <!--end: General scripts-->
        <!--begin: Stepper Logic-->
        <script>
            $(document).ready(function () {
                // Configuración inicial del stepper
                var totalSteps = $('[data-kt-stepper-element="content"]').length;

                // Al hacer clic en "Next"
                $('[data-kt-element*="-next"]').on('click', function () {
                    if (validateCurrentStep()) {
                        console.log("Paso valido")
                        navigateStepper(1);
                    }
                    console.log("Paso no valido")
                });

                // Al hacer clic en "Previous"
                $('[data-kt-element*="-previous"]').on('click', function () {
                    navigateStepper(-1);
                });

                //Al hacer click en create
                $('[data-kt-element*="-create"]').on('click', function (e) {
                    e.preventDefault();
                    if (validateCurrentStep()) {
                        Create();
                    }
                });

                //funcion para validar stepper
                function validateCurrentStep() {
                    var currentSection = $('.current[data-kt-stepper-element="content"]');
                    var currentIndex = $('[data-kt-stepper-element="content"]').index(currentSection);
                    var inputs = currentSection.find('input[required], select[required]');
                    var isValid = true;

               

                    inputs.each(function () {
                        var element = $(this);
                        if (!element.val() || element.hasClass('invalid')) {
                            var parentDiv = element.closest('.input-group');
                            isValid = false;
                            element.addClass('invalid');
                            parentDiv.next('.invalid-feedback').show();
                        } else {
                            var parentDiv = element.closest('.input-group');
                            element.removeClass('invalid');
                            parentDiv.next('.invalid-feedback').hide();
                        }
                    });


                    if(isValid && currentIndex === 0) { //Llenar el select de sacos de la seccion 2
                        var Sacks = [];
                        $('[data-repeater-sack]').each(function (index) {
                            if (index !== 1){
                                Sacks.push($(this).val().trim());
                            }
                        });

                        $('[data-repeater-ricesack]').each(function (index) {
                            // Limpiar las opciones existentes manteniendo solo la opción por defecto
                            $(this).find('option:not(:first)').remove();
        
                            // Llenar el select con los valores de la lista Sacks
                            Sacks.forEach(function(sackValue) {
                                if(sackValue !== '') {
                                    let option = new Option(sackValue, sackValue);
                                    $(this).append(option);
                                }
                            }.bind(this));
                        });

                    }

                    return isValid;

                }

                function navigateStepper(direction) {
                    // Encuentra la sección actual
                    var currentSection = $('.current[data-kt-stepper-element="content"]');

                    // Encuentra el índice de la sección actual
                    var currentIndex = $('[data-kt-stepper-element="content"]').index(currentSection);

                    // Calcula el próximo índice
                    var nextIndex = currentIndex + direction;

                    // Asegúrate de que el próximo índice esté en el rango válido
                    if (nextIndex >= 0 && nextIndex < totalSteps) {
                        // Oculta la sección actual
                        currentSection.removeClass('current');

                        // Muestra la siguiente o anterior sección
                        $('[data-kt-stepper-element="content"]:eq(' + nextIndex + ')').addClass('current');

                        // Actualiza la navegación del stepper
                        $('.stepper-item.current').removeClass('current');
                        $('[data-kt-stepper-element="nav"]:eq(' + nextIndex + ')').addClass('current');
                    }
                }

            });

            function navigateStepperByStep(step) {
                // Encuentra la sección actual
                var currentSection = $('.current[data-kt-stepper-element="content"]');

                // Calcula el próximo índice
                var nextIndex = step;

                // Oculta la sección actual
                currentSection.removeClass('current');

                // Muestra la siguiente o anterior sección
                $('[data-kt-stepper-element="content"]:eq(' + nextIndex + ')').addClass('current');

                // Actualiza la navegación del stepper
                $('.stepper-item.current').removeClass('current');
                $('[data-kt-stepper-element="nav"]:eq(' + nextIndex + ')').addClass('current');

            }
        </script>
        <!--end: Stepper Logic-->
        <!--begin: Stepper Validations-->
        <script>

            //FUNCION QUE REALIZA LAS VALIDACIONES A CADA ELEMENTO DENTRO DEL MODAL
            function ValidateElement(element) {
                var isValid = true;
                var validationTypes = element.data('validation').split(',');

                for (var i = 0; i < validationTypes.length; i++) {
                    var validationType = validationTypes[i];
                    switch (validationType) {
                        case 'required':
                            if (!element.val()) {
                                isValid = false;
                                console.log("Required")
                                ShowValidationError(element, 'Este campo es obligatorio.');
                                return isValid;
                            } else {
                                RemoveValidationError(element);
                            }
                            break;
                        case 'digits':
                            var digits = element.data('digits').toString().split(',').map(Number);
                            if (!digits.includes(element.val().length)) {
                                isValid = false;
                                console.log("Digits")
                                ShowValidationError(element, `El campo debe tener exactamente ${digits.join(' o ')} dígitos.`);
                                return isValid;
                            } else {
                                RemoveValidationError(element);
                            }
                            break;
                        case 'email':
                            if (element.val() == "") {
                                var parentDiv = element.closest('.input-group');
                                element.removeClass('valid');
                                element.removeClass('invalid');
                                parentDiv.next('.invalid-feedback').hide();
                                element.removeAttr('required');
                            }
                            else if (!ValidateEmail(element.val())) {
                                isValid = false;
                                console.log("email")
                                ShowValidationError(element, 'El correo electrónico no es válido.');
                                element.attr('required', true);
                                return isValid;
                            }
                            else {

                                RemoveValidationError(element);
                                element.attr('required', true);
                            }
                            break;

                        case 'numeric':
                            if (!ValidateNumeric(element.val())) {
                                isValid = false;
                                console.log("numeric")
                                ShowValidationError(element, 'El campo solo debe contener valores numéricos.');
                                return isValid;
                            } else {
                                RemoveValidationError(element);
                            }
                            break;

                        case 'decimal':
                            console.log("decimal")

                            if (!ValidateDecimal(element.val())) {
                                isValid = false;
                                console.log("decimal")
                                ShowValidationError(element, 'El número decimal no es válido.');
                                return isValid;
                            } else {
                                RemoveValidationError(element);
                            }
                            break;

                        case 'contract-format':
                            var formattedValue = formatContract(element.val());
                            element.val(formattedValue);
                            if (!ValidateContractFormat(formattedValue)) {
                                isValid = false;
                                console.log("contract-format")
                                ShowValidationError(element, 'El contrato no sigue el formato correcto.');
                                return isValid;
                            } else {
                                RemoveValidationError(element);
                            }
                            break;


                        default:
                            break;
                    }
                }

                return isValid;
            }

            //FUNCION QUE MUESTRA LOS ATRIBUTOS DE ERROR DEL ELEMENTO
            function ShowValidationError(element, message) {
                var parentDiv = element.closest('.input-group');
                element.removeClass('valid');
                element.addClass('invalid');
                parentDiv.next('.invalid-feedback').text(message).show();
            }

            //FUNCION QUE RETIRA LOS ATRIBUTOS Y CLASES DE ERROR Y AGREGA ATRIBUTOS Y CLASES DE EXITO
            function RemoveValidationError(element) {
                var parentDiv = element.closest('.input-group');
                element.removeClass('invalid');
                parentDiv.next('.invalid-feedback').hide();
                element.addClass('valid');
            }

            //FUNCION PARA VALIDAR CORREO
            function ValidateEmail(email) {
                // Expresión regular para validar un correo electrónico
                var emailPattern = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;

                // Verificar si el email pasa la validación básica
                if (!emailPattern.test(email)) {
                    return false;
                }

                // Verificar que no termine con un punto
                if (email.endsWith('.')) {
                    return false;
                }

                // Si pasa ambas validaciones, el email es válido
                return true;
            }

            //FUNCION PARA VALIDAR VALORES NUMERICOS
            function ValidateNumeric(number) {
                return /^\d+$/.test(number);
            }


            function ValidateDecimal(string) {
                // Si está vacío o no es string, retornar false
                if (!string || typeof string !== 'string') {
                    return false;
                }

                // Eliminar espacios en blanco
                string = string.trim();

                // Verificar si es un número válido
                // Acepta:
                // - Cero (0)
                // - Números enteros positivos (ej: 1, 2, 123)
                // - Números decimales positivos (ej: 0.45, 123.45)
                // - No permite múltiples puntos decimales
                const decimalRegex = /^(0|[1-9]\d*)\.?\d*$/;
                return decimalRegex.test(string);
            }

            //VALIDACION DE FORMATO DE CONTRATOS
            function ValidateContractFormat(contract) {
                // Expresión regular para validar el formato del contrato
                var contractPattern = /^\d{4}-\d{4}-\d{2}-\d{8}$/;
                return contractPattern.test(contract);
            }

            //CONVERTIDOR DE NUMEROS DECIMALES
            function formatDecimal(value) {

                // Convertir el valor en un número flotante
                let number = parseFloat(value);

                if (isNaN(number)) {
                    return 'Invalid number';
                }

                // Formatear el número con comas en los miles y dos decimales
                return number.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            }

            //CONVERTIDOR A FORMATO DE CONTRATO
            function formatContract(value) {

                var value = value.replace(/\D/g, '');
                console.log(value);
                var sections = [4, 4, 2, 8];
                var formattedValue = '';
                var index = 0;

                for (var i = 0; i < sections.length; i++) {
                    if (value.length > index) {
                        var endIndex = index + sections[i];
                        if (value.length > endIndex) {
                            if (value.length > 18 && i === 3) formattedValue += value.substring(index, endIndex);
                            else formattedValue += value.substring(index, endIndex) + '-';
                        } else {
                            formattedValue += value.substring(index, value.length);
                        }
                    }
                    index += sections[i];
                }

                return formattedValue;
            }

        </script>
        <!--end: Stepper Validations-->
        <!--begin: Repeater logic-->
        <script>

            $(document).ready(function () {

                function clonedLastSack(){
                    // Clona el último elemento repeater y agrega al final
                    var clonator = $('[data-repeater-item-sack]').eq(1);
                    var lastItem = $('[data-repeater-item-sack]').last();
                    var clonedItem = clonator.clone().show();
                    //Establece la numeracion del clon
                    var lastNumeration = lastItem.find('#numeration').text();
                    var newNumeration = parseInt(lastNumeration, 10) + 1;
                    clonedItem.find('#numeration').text(newNumeration);
                    // Limpia los valores de los campos de entrada en el elemento clonado
                    clonedItem.find('input[data-repeater-sack]').val('');
                    clonedItem.find('input[data-repeater-sack]').removeClass('invalid');
                    clonedItem.find('input[data-repeater-sack]').removeClass('valid');
                    // Ocultar y eliminar el mensaje de retroalimentación
                    var parentDiv = clonedItem.closest('.input-group');
                    parentDiv.next('.invalid-feedback').text('Este campo es obligatorio.').hide();


                    clonedItem.find('input[data-repeater-sack]').attr('required', 'required').attr('data-validation', 'required,decimal'); // Añadir el atributo 'required' al input
                    
                    lastItem.after(clonedItem);
                }

                function clonedLastClassification() {

                    // Clona el último elemento repeater y agrega al final
                    var clonator = $('[data-repeater-item-classification]').eq(1);
                    var lastItem = $('[data-repeater-item-classification]').last();


                    var clonedItem = clonator.clone().show();

                    //Establece la numeracion del clon
                    var lastNumeration = lastItem.find('#numeration').text();
                    var newNumeration = parseInt(lastNumeration, 10) + 1;
                    clonedItem.find('#numeration').text(newNumeration);

                    // Limpia los valores de los campos de entrada en el elemento clonado
                    clonedItem.find('input[data-repeater-riceclass]').val('');
                    clonedItem.find('input[data-repeater-riceclass]').removeClass('invalid');
                    clonedItem.find('input[data-repeater-riceclass]').removeClass('valid');

                    clonedItem.find('input[data-repeater-ricegrade]').val('');
                    clonedItem.find('input[data-repeater-ricegrade]').removeClass('invalid');
                    clonedItem.find('input[data-repeater-ricegrade]').removeClass('valid');

                    clonedItem.find('select[data-repeater-ricesack]').val('');
                    clonedItem.find('select[data-repeater-ricesack]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-ricesack]').removeClass('valid');

                    clonedItem.find('select[data-repeater-minimunstock]').val('');
                    clonedItem.find('select[data-repeater-minimunstock]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-minimunstock]').removeClass('valid');

                    clonedItem.find('select[data-repeater-maximunstock]').val('');
                    clonedItem.find('select[data-repeater-maximunstock]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-maximunstock]').removeClass('valid');

                    clonedItem.find('select[data-repeater-sacksperlot]').val('');
                    clonedItem.find('select[data-repeater-sacksperlot]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-sacksperlot]').removeClass('valid');


                    // Ocultar y eliminar el mensaje de retroalimentación
                    var parentDiv = clonedItem.closest('.input-group');
                    parentDiv.next('.invalid-feedback').text('Este campo es obligatorio.').hide();


                    // Agregar atributos al nuevo elemento clonado
                    clonedItem.find('select[data-repeater-riceclass]').attr('required', 'required').attr('data-validation', 'required'); // Añadir el atributo 'required' al select
                    clonedItem.find('select[data-repeater-ricegrade]').attr('required', 'required').attr('data-validation', 'required'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-ricesack]').attr('required', 'required').attr('data-validation', 'required'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-minimunstock]').attr('required', 'required').attr('data-validation', 'required,numeric'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-maximunstock]').attr('required', 'required').attr('data-validation', 'required,numeric'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-sacksperlot]').attr('required', 'required').attr('data-validation', 'required,numeric'); // Añadir el atributo 'required' al input

                    lastItem.after(clonedItem);
                }

                function clonedLastWarehouse() {

                    // Clona el último elemento repeater y agrega al final
                    var clonator = $('[data-repeater-item-warehouse]').eq(1);
                    var lastItem = $('[data-repeater-item-warehouse]').last();


                    var clonedItem = clonator.clone().show();

                    //Establece la numeracion del clon
                    var lastNumeration = lastItem.find('#numeration').text();
                    var newNumeration = parseInt(lastNumeration, 10) + 1;
                    clonedItem.find('#numeration').text(newNumeration);

                    // Limpia los valores de los campos de entrada en el elemento clonado
                    clonedItem.find('input[data-repeater-warehousename]').val('');
                    clonedItem.find('input[data-repeater-warehousename]').removeClass('invalid');
                    clonedItem.find('input[data-repeater-warehousename]').removeClass('valid');

                    clonedItem.find('input[data-repeater-warehousedescription]').val('');
                    clonedItem.find('input[data-repeater-warehousedescription]').removeClass('invalid');
                    clonedItem.find('input[data-repeater-warehousedescription]').removeClass('valid');

                    clonedItem.find('select[data-repeater-warehouselength]').val('');
                    clonedItem.find('select[data-repeater-warehouselength]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-warehouselength]').removeClass('valid');

                    clonedItem.find('select[data-repeater-warehousewidth]').val('');
                    clonedItem.find('select[data-repeater-warehousewidth]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-warehousewidth]').removeClass('valid');

                    clonedItem.find('select[data-repeater-warehouseheight]').val('');
                    clonedItem.find('select[data-repeater-warehouseheight]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-warehouseheight]').removeClass('valid');

                    clonedItem.find('select[data-repeater-warehouserow]').val('');
                    clonedItem.find('select[data-repeater-warehouserow]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-warehouserow]').removeClass('valid');

                    clonedItem.find('select[data-repeater-warehousecolumn]').val('');
                    clonedItem.find('select[data-repeater-warehousecolumn]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-warehousecolumn]').removeClass('valid');

                    // Ocultar y eliminar el mensaje de retroalimentación
                    var parentDiv = clonedItem.closest('.input-group');
                    parentDiv.next('.invalid-feedback').text('Este campo es obligatorio.').hide();

                    // Agregar atributos al nuevo elemento clonado
                    clonedItem.find('select[data-repeater-warehousename]').attr('required', 'required').attr('data-validation', 'required'); // Añadir el atributo 'required' al select
                    clonedItem.find('select[data-repeater-warehousedescription]').attr('required', 'required').attr('data-validation', 'required'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-warehouselength]').attr('required', 'required').attr('data-validation', 'required,decimal'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-warehousewidth]').attr('required', 'required').attr('data-validation', 'required,decimal'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-warehouseheight]').attr('required', 'required').attr('data-validation', 'required,decimal'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-warehouserow]').attr('required', 'required').attr('data-validation', 'required,numeric'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-warehousecolumn]').attr('required', 'required').attr('data-validation', 'required,numeric'); // Añadir el atributo 'required' al input

                    lastItem.after(clonedItem);
                }

                function clonedLastOtherZone() {

                    // Clona el último elemento repeater y agrega al final
                    var clonator = $('[data-repeater-item-otherzone]').eq(1);
                    var lastItem = $('[data-repeater-item-otherzone]').last();


                    var clonedItem = clonator.clone().show();

                    //Establece la numeracion del clon
                    var lastNumeration = lastItem.find('#numeration').text();
                    console.log(lastNumeration)
                    var newNumeration = parseInt(lastNumeration, 10) + 1;
                    console.log(newNumeration)
                    clonedItem.find('#numeration').text(newNumeration);

                    // Limpia los valores de los campos de entrada en el elemento clonado
                    clonedItem.find('input[data-repeater-otherzonename]').val('');
                    clonedItem.find('input[data-repeater-otherzonename]').removeClass('invalid');
                    clonedItem.find('input[data-repeater-otherzonename]').removeClass('valid');

                    clonedItem.find('input[data-repeater-otherzonedescription]').val('');
                    clonedItem.find('input[data-repeater-otherzonedescription]').removeClass('invalid');
                    clonedItem.find('input[data-repeater-otherzonedescription]').removeClass('valid');

                    clonedItem.find('select[data-repeater-otherzonelength]').val('');
                    clonedItem.find('select[data-repeater-otherzonelength]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-otherzonelength]').removeClass('valid');

                    clonedItem.find('select[data-repeater-otherzonewidth]').val('');
                    clonedItem.find('select[data-repeater-otherzonewidth]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-otherzonewidth]').removeClass('valid');

                    clonedItem.find('select[data-repeater-otherzoneheight]').val('');
                    clonedItem.find('select[data-repeater-otherzoneheight]').removeClass('invalid');
                    clonedItem.find('select[data-repeater-otherzoneheight]').removeClass('valid');

                    // Ocultar y eliminar el mensaje de retroalimentación
                    var parentDiv = clonedItem.closest('.input-group');
                    parentDiv.next('.invalid-feedback').text('Este campo es obligatorio.').hide();


                    // Agregar atributos al nuevo elemento clonado
                    clonedItem.find('select[data-repeater-otherzonename]').attr('required', 'required').attr('data-validation', 'required'); // Añadir el atributo 'required' al select
                    clonedItem.find('select[data-repeater-otherzonedescription]').attr('required', 'required').attr('data-validation', 'required'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-otherzonelength]').attr('required', 'required').attr('data-validation', 'required,decimal'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-otherzonewidth]').attr('required', 'required').attr('data-validation', 'required,decimal'); // Añadir el atributo 'required' al input
                    clonedItem.find('input[data-repeater-otherzoneheight]').attr('required', 'required').attr('data-validation', 'required,decimal'); // Añadir el atributo 'required' al input

                    lastItem.after(clonedItem);
                }


                // Al hacer clic en "Add"
                $('[data-repeater-create-sack]').on('click', function () {
                    clonedLastSack()
                });

                // Al hacer clic en "Add"
                $('[data-repeater-create-classification]').on('click', function () {
                    clonedLastClassification()
                });

                // Al hacer clic en "Add"
                $('[data-repeater-create-warehouse]').on('click', function () {
                    clonedLastWarehouse()
                });

                // Al hacer clic en "Add"
                $('[data-repeater-create-otherzone]').on('click', function () {
                    clonedLastOtherZone()
                });


                // Al hacer clic en "Delete"
                $(document).on('click', '[data-repeater-delete-sack]', function () {
                    // Elimina el elemento repeater actual
                    $(this).closest('[data-repeater-item-sack]').remove();
                    // Reestablece la enumeración
                    resetEnumerations('sack');
                });

                // Al hacer clic en "Delete"
                $(document).on('click', '[data-repeater-delete-classification]', function () {
                    // Elimina el elemento repeater actual
                    $(this).closest('[data-repeater-item-classification]').remove();
                    // Reestablece la enumeración
                    resetEnumerations('classification');
                });

                // Al hacer clic en "Delete"
                $(document).on('click', '[data-repeater-delete-warehouse]', function () {
                    // Elimina el elemento repeater actual
                    $(this).closest('[data-repeater-item-warehouse]').remove();
                    // Reestablece la enumeración
                    resetEnumerations('warehouse');
                });

                // Al hacer clic en "Delete"
                $(document).on('click', '[data-repeater-delete-otherzone]', function () {
                    // Elimina el elemento repeater actual
                    $(this).closest('[data-repeater-item-otherzone]').remove();
                    // Reestablece la enumeración
                    resetEnumerations('otherzone');
                });


                // Función para reenumerar los elementos
                function resetEnumerations(repeaterName) {
                    console.log("Estoy en reset numeration")
                    // Construye el selector dinámico usando el parámetro repeaterName
                    var items = $('[data-repeater-item-' + repeaterName + ']');

                    // Recorre cada elemento y actualiza la numeración
                    items.each(function (index) {
                        // Si el índice es mayor o igual a 2 (tercer elemento), cambia la numeración
                        if (index >= 2) {
                            $(this).find('#numeration').text(index); // Puedes ajustar la lógica si es necesario
                        }
                    });
                }


            });



        </script>
        <!--end: Repeater logic-->

        <script>
            function calculatePallets(element) {
                // Obtener el contenedor del repeater
                var container = $(element).closest('[data-repeater-item-warehouse]');

                // Obtener las dimensiones del almacén
                var warehouseLength = parseFloat(container.find('[data-repeater-warehouselength]').val());
                var warehouseWidth = parseFloat(container.find('[data-repeater-warehousewidth]').val());

                // Obtener las dimensiones del palet usando sus IDs
                var palletLength = parseFloat($('#palletLenght').val());
                var palletWidth = parseFloat($('#palletWidth').val());

                // Definir el espacio del pasillo
                var aisleWidth = 3; // ancho del pasillo en metros

                // Validar que todos los parámetros necesarios tengan valor
                if (!isNaN(warehouseLength) && !isNaN(warehouseWidth) && 
                    !isNaN(palletLength) && !isNaN(palletWidth) && 
                    warehouseLength > 0 && warehouseWidth > 0 && 
                    palletLength > 0 && palletWidth > 0) {
        
                    // Calcular el número de filas y columnas para la orientación normal
                    var totalSpaceNormal = 2 * palletLength + aisleWidth; // espacio para 2 filas y el pasillo
                    var rowsNormal = Math.floor(warehouseLength / totalSpaceNormal);
                    var columnsNormal = Math.floor(warehouseWidth / palletWidth);
        
                    // Calcular el número de filas y columnas para la orientación rotada
                    var totalSpaceRotated = 2 * palletWidth + aisleWidth; // espacio para 2 filas y el pasillo
                    var rowsRotated = Math.floor(warehouseLength / totalSpaceRotated);
                    var columnsRotated = Math.floor(warehouseWidth / palletLength);
        
                    // Elegir la mejor distribución
                    if (rowsNormal * columnsNormal >= rowsRotated * columnsRotated) {
                        container.find('[data-repeater-warehouserow]').val(rowsNormal);
                        container.find('[data-repeater-warehousecolumn]').val(columnsNormal);
                    } else {
                        container.find('[data-repeater-warehouserow]').val(rowsRotated);
                        container.find('[data-repeater-warehousecolumn]').val(columnsRotated);
                    }
                } else {
                    // Si no todos los parámetros son válidos, limpiar los campos de resultado
                    container.find('[data-repeater-warehouserow]').val('');
                    container.find('[data-repeater-warehousecolumn]').val('');
                }
            }

            // Añadir el evento oninput a los campos necesarios
            $(document).on('input', '[data-repeater-warehouselength], [data-repeater-warehousewidth]', function() {
                calculatePallets(this);
            });

            // También puedes agregar un evento para los campos de las dimensiones del palet
            $(document).on('input', '#palletLenght, #palletWidth', function() {
                $('[data-repeater-item-warehouse]').each(function() {
                    calculatePallets($(this).find('[data-repeater-warehouselength]'));
                });
            });

        </script>
    </body>
    <!--end::Body-->
    </html>


<!--begin: Modal - Create App-->
<div class="modal fade" id="kt_modal_1" tabindex="-1" aria-hidden="true">
    <!--begin::Modal dialog-->
    <div class="modal-dialog modal-dialog-centered modal-xl modal-dialog-custom-lg">
        <!--begin::Modal content-->
        <div class="modal-content">
            <!--begin::Modal header-->
            <div class="modal-header">
                <!--begin::Modal title-->
                <h2 id="TituloModal">Configuracion inicial del sistema</h2>
                <!--end::Modal title-->
            </div>
            <!--end::Modal header-->
            <!--begin::Modal body-->
            <div class="modal-body py-lg-10 px-lg-10">
                <!--begin::Stepper-->
                <div class="stepper stepper-pills stepper-column d-flex flex-column flex-xl-row flex-row-fluid" id="kt_modal_create_app_stepper">
                    <!--begin::Aside-->
                    <div class="d-flex justify-content-center justify-content-xl-start flex-row-auto w-100 w-xl-300px">
                        <!--begin::Nav-->
                        <div class="stepper-nav ps-lg-10">
                            <!--begin::Step 1 : CONFIGURACION DE SACOS-->
                            <div class="stepper-item current" data-kt-stepper-element="nav">
                                <!--begin::Wrapper-->
                                <div class="stepper-wrapper">
                                    <!--begin::Icon-->
                                    <div class="stepper-icon w-40px h-40px">
                                        <i class="ki-duotone ki-check stepper-check fs-2"></i>
                                        <span class="stepper-number">1</span>
                                    </div>
                                    <!--end::Icon-->
                                    <!--begin::Label-->
                                    <div class="stepper-label">
                                        <h3 class="stepper-title">Sacos</h3>
                                        <div class="stepper-desc">Configura los sacos de arroz que se manejan en el negocio</div>
                                    </div>
                                    <!--end::Label-->
                                </div>
                                <!--end::Wrapper-->
                                <!--begin::Line-->
                                <div class="stepper-line h-40px"></div>
                                <!--end::Line-->
                            </div>
                            <!--end::Step 1-->
                            <!--begin::Step 2: CONFIGURACION DE CLASIFICACIONES-->
                            <div class="stepper-item" data-kt-stepper-element="nav">
                                <!--begin::Wrapper-->
                                <div class="stepper-wrapper">
                                    <!--begin::Icon-->
                                    <div class="stepper-icon w-40px h-40px">
                                        <i class="ki-duotone ki-check stepper-check fs-2"></i>
                                        <span class="stepper-number">2</span>
                                    </div>
                                    <!--end::Icon-->
                                    <!--begin::Label-->
                                    <div class="stepper-label">
                                        <h3 class="stepper-title">Clasificación</h3>
                                        <div class="stepper-desc">Configura stocks, lotes y alertas de fechas de vencimiento de las clasificaciones</div>
                                    </div>
                                    <!--end::Label-->
                                </div>
                                <!--end::Wrapper-->
                                <!--begin::Line-->
                                <div class="stepper-line h-40px"></div>
                                <!--end::Line-->
                            </div>
                            <!--end::Step 2-->
                            <!--begin::Step 3 : CONFIGURACION DE ALMACENES-->
                            <div class="stepper-item" data-kt-stepper-element="nav">
                                <!--begin::Wrapper-->
                                <div class="stepper-wrapper">
                                    <!--begin::Icon-->
                                    <div class="stepper-icon w-40px h-40px">
                                        <i class="ki-duotone ki-check stepper-check fs-2"></i>
                                        <span class="stepper-number">3</span>
                                    </div>
                                    <!--begin::Icon-->
                                    <!--begin::Label-->
                                    <div class="stepper-label">
                                        <h3 class="stepper-title">Almacén</h3>
                                        <div class="stepper-desc">Configura los almacenes</div>
                                    </div>
                                    <!--begin::Label-->
                                </div>
                                <!--end::Wrapper-->
                                <!--begin::Line-->
                                <div class="stepper-line h-40px"></div>
                                <!--end::Line-->
                            </div>
                            <!--end::Step 3-->
                            <!--begin::Step 4 : FINALIZACION DEL PROCESO-->
                            <div class="stepper-item mark-completed" data-kt-stepper-element="nav">
                                <!--begin::Wrapper-->
                                <div class="stepper-wrapper">
                                    <!--begin::Icon-->
                                    <div class="stepper-icon w-40px h-40px">
                                        <i class="ki-duotone ki-check stepper-check fs-2"></i>
                                        <span class="stepper-number">4</span>
                                    </div>
                                    <!--end::Icon-->
                                    <!--begin::Label-->
                                    <div class="stepper-label">
                                        <h3 class="stepper-title">Otras zonas</h3>
                                        <div class="stepper-desc">Configura otras zonas dentro del negocio</div>
                                    </div>
                                    <!--end::Label-->
                                </div>
                                <!--end::Wrapper-->
                            </div>
                            <!--end::Step 4-->
                        </div>
                        <!--end::Nav-->
                    </div>
                    <!--begin::Aside-->
                    <!--begin::Content-->
                    <div class="flex-row-fluid py-lg-2 px-lg-12">


                        <!--begin::Form-->
                        <form asp-action="CreateFirstConfiguration" method="post" class="row g-3 needs-validation" novalidate="novalidate" id="kt_modal_create_app_form">
                            
                            <!-- Sacks -->
                            <input hidden type="text" id="Sacks" name="Sacks" />
                        
                            <!-- Classification -->
                            <input hidden type="text" id="IdGrades" name="IdGrades" />
                            <input hidden type="text" id="IdClasses"  name="IdClasses" />
                            <input hidden type="text" id="SacksWeight" name="SacksWeight" />
                            <input hidden type="text" id="MinimunStocks" name="MinimunStocks" />
                            <input hidden type="text" id="MaximunStocks" name="MaximunStocks" />
                            <input hidden type="text" id="QuatitiesSacksPerLot" name="QuatitiesSacksPerLot" />

                            <!-- Warehouse -->
                            <input hidden type="text" id="WarehouseNames" name="WarehouseNames" />
                            <input hidden type="text" id="WarehouseDescription" name="WarehouseDescription" />
                            <input hidden type="text" id="WarehouseLength" name="WarehouseLength" />
                            <input hidden type="text" id="WarehouseWidth" name="WarehouseWidth" />
                            <input hidden type="text" id="WarehouseHeight" name="WarehouseHeight" />
                            <input hidden type="text" id="WarehouseRows" name="WarehouseRows" />
                            <input hidden type="text" id="WarehouseColumns" name="WarehouseColumns" />

                            <!-- Other Zone -->
                            <input hidden type="text" id="OtherZoneNames" name="OtherZoneNames" />
                            <input hidden type="text" id="OtherZoneDescription" name="OtherZoneDescription" />
                            <input hidden type="text" id="OtherZoneLength" name="OtherZoneLength" />
                            <input hidden type="text" id="OtherZoneWidth" name="OtherZoneWidth" />
                            <input hidden type="text" id="OtherZoneHeight" name="OtherZoneHeight" />


                            <!--begin::Step 1 : CONFIGURACION DE SACOS-->
                            <div class="current" data-kt-stepper-element="content">
                                <div class="w-100">
                                    <!--begin::Label-->
                                    <label class="d-flex align-items-center fs-5 fw-semibold mb-4">
                                        <span>Configura los sacos según el peso que se comencializan en su negocio</span>
                                        <span class="ms-1" data-bs-toggle="tooltip" title="Ingresar la capacidad (Kg) de los sacos">
                                            <i class="ki-duotone ki-information-5 text-gray-500 fs-6">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                                <span class="path3"></span>
                                            </i>
                                        </span>
                                    </label>
                                    <!--end::Label-->


                                    <div class="inner-repeater-sack">
                                        <div data-repeater-list-sack="kt_docs_repeater_nested_inner">
                                            <!-- repeater principal-->
                                            <div data-repeater-item-sack>
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span class="h5">1</span></div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="sack" type="text" required data-validation="required,decimal" class="form-control" placeholder="Sacos" oninput="ValidateElement($(this))" data-repeater-sack />
                                                                <label class="form-label required" for="sack">Peso de saco (Kg)</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- repeater con boton de eliminar-->
                                            <div data-repeater-item-sack style="display: none;">
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span id="numeration" class="h5">1</span></div>
                                                <div class="row">
                                                    
                                                        <div class="col-4 mb-3">
                                                            <div class="d-flex gap-2">
                                                                <div class="flex-grow-1">
                                                                    <div class="input-group">
                                                                        <div class="form-floating">
                                                                            <input id="sack" type="text" class="form-control" placeholder="Sacos" oninput="ValidateElement($(this))" data-repeater-sack />
                                                                            <label class="form-label required" for="sack">Peso de saco (Kg)</label>
                                                                        </div>
                                                                    </div>
                                                                    <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                                </div>

                                                                <button class="border border-secondary btn btn-light-danger px-2 align-self-start" data-repeater-delete-sack type="button">
                                                                    <i class="ki-duotone ki-trash fs-2">
                                                                        <span class="path1"></span>
                                                                        <span class="path2"></span>
                                                                        <span class="path3"></span>
                                                                        <span class="path4"></span>
                                                                        <span class="path5"></span>
                                                                    </i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex mb-10">
                                        <button class="border border-secondary btn btn-lg btn-light-primary ms-2" data-repeater-create-sack type="button">
                                            <span class="indicator-label">Agregar</span>
                                        </button>
                                    </div>

                                    
                                    <!--begin::Actions-->
                                    <div class="d-flex justify-content-end">
                                        <button type="button" class="btn btn-lg btn-primary" data-kt-element="first-step-next">
                                            <span class="indicator-label">Siguiente</span>
                                            <span class="indicator-progress">
                                                Por favor, espera...
                                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                            </span>
                                        </button>
                                    </div>
                                    <!--end::Actions-->
                                </div>
                            </div>
                            <!--end::Step 1-->
                            <!--begin::Step 2 : CONFIGURACION DE CLASIFICACIONES-->
                            <div data-kt-stepper-element="content">
                                <div class="w-100">
                                    <!--begin::Label-->
                                    <label class="d-flex align-items-center fs-5 fw-semibold mb-4">
                                        <span>Configura las clasificaciones que maneja dentro de su negocio</span>
                                        <span class="ms-1" data-bs-toggle="tooltip" title="Ingresar información del cliente">
                                            <i class="ki-duotone ki-information-5 text-gray-500 fs-6">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                                <span class="path3"></span>
                                            </i>
                                        </span>
                                    </label>
                                    <!--end::Label-->


                                    <div class="inner-repeater-classification">
                                        <div data-repeater-list-classification="kt_docs_repeater_nested_inner">
                                            <!-- repeater principal-->
                                            <div data-repeater-item-classification>
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span class="h5">1</span></div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <select id="riceClass" class="form-select" required data-validation="required" data-dropdown-parent="#kt_modal_1" oninput="ValidateElement($(this))" data-repeater-riceclass>
                                                                    <option value="">Seleccione una clase de arroz</option>
                                                                    @foreach (var item in Model.RiceClasses)
                                                                    {
                                                                        <option value=@item.IdClass>@item.Name</option>
                                                                    }
                                                                </select>
                                                                <label class="form-label" for="riceClass">Clase</label>
                                                            </div>
                                                        </div>
                                                        <!-- Mensaje de feedback inmediatamente después del input-group -->
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <select id="riceGrade" class="form-select" required data-validation="required" data-dropdown-parent="#kt_modal_1" oninput="ValidateElement($(this))" data-repeater-ricegrade>
                                                                    <option value="">Seleccione un grado de arroz</option>
                                                                    @foreach (var item in Model.RiceGrades)
                                                                    {
                                                                        <option value=@item.IdGrade>@item.Name</option>
                                                                    }
                                                                </select>
                                                                <label class="form-label" for="riceGrade">Grado</label>
                                                            </div>
                                                        </div>
                                                        <!-- Mensaje de feedback inmediatamente después del input-group -->
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <select id="riceSack" class="form-select" required data-validation="required" data-dropdown-parent="#kt_modal_1" oninput="ValidateElement($(this))" data-repeater-ricesack>
                                                                    <option value="">Seleccione un saco de arroz</option>
                                                                </select>
                                                                <label class="form-label" for="riceSack">Saco (Kg)</label>
                                                            </div>
                                                        </div>
                                                        <!-- Mensaje de feedback inmediatamente después del input-group -->
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="sacksPerLot" type="text" required data-validation="required,numeric" class="form-control" placeholder="Cantidad de sacos por lote" oninput="ValidateElement($(this))" data-repeater-sacksperlot />
                                                                <label class="form-label required" for="sacksPerLot">Cantidad de sacos por lote</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="minimunStock" type="text" required data-validation="required,numeric" class="form-control" placeholder="Nº Contrato" oninput="ValidateElement($(this))" data-repeater-minimunstock />
                                                                <label class="form-label required" for="minimunStock">Stock mínimo</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="maximunStock" type="text" required data-validation="required,numeric" class="form-control" placeholder="Stock máximo" oninput="ValidateElement($(this))" data-repeater-maximunstock />
                                                                <label class="form-label required" for="maximunStock">Stock máximo</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    
                                                </div>
                                            </div>
                                            <!-- repeater con boton de eliminar-->
                                            <div data-repeater-item-classification style="display: none;">
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span id="numeration" class="h5">1</span></div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <select id="riceClass" class="form-select" data-dropdown-parent="#kt_modal_1" oninput="ValidateElement($(this))" data-repeater-riceclass>
                                                                    <option value="">Seleccione una clase de arroz</option>
                                                                    @foreach (var item in Model.RiceClasses)
                                                                    {
                                                                        <option value=@item.IdClass>@item.Name</option>
                                                                    }
                                                                </select>
                                                                <label class="form-label" for="riceClass">Clase</label>
                                                            </div>
                                                        </div>
                                                        <!-- Mensaje de feedback inmediatamente después del input-group -->
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <select id="riceGrade" class="form-select" data-dropdown-parent="#kt_modal_1" oninput="ValidateElement($(this))" data-repeater-ricegrade>
                                                                    <option value="">Seleccione un grado de arroz</option>
                                                                    @foreach (var item in Model.RiceGrades)
                                                                    {
                                                                        <option value=@item.IdGrade>@item.Name</option>
                                                                    }
                                                                </select>
                                                                <label class="form-label" for="riceGrade">Grado</label>
                                                            </div>
                                                        </div>
                                                        <!-- Mensaje de feedback inmediatamente después del input-group -->
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>

                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <select id="riceSack" class="form-select" data-dropdown-parent="#kt_modal_1" oninput="ValidateElement($(this))" data-repeater-ricesack>
                                                                    <option value="">Seleccione un saco de arroz</option>
                                                                </select>
                                                                <label class="form-label" for="riceSack">Saco (Kg)</label>
                                                            </div>
                                                        </div>
                                                        <!-- Mensaje de feedback inmediatamente después del input-group -->
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>

                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="sacksPerLot" type="text" class="form-control" placeholder="Cantidad de sacos por lote" oninput="ValidateElement($(this))" data-repeater-sacksperlot />
                                                                <label class="form-label required" for="sacksPerLot">Cantidad de sacos por lote</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="minimunStock" type="text" class="form-control" placeholder="Stock mínimo" oninput="ValidateElement($(this))" data-repeater-minimunstock />
                                                                <label class="form-label required" for="minimunStock">Stock mínimo</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="d-flex gap-2">
                                                            <div class="flex-grow-1">
                                                                <div class="input-group">
                                                                    <div class="form-floating">
                                                                        <input id="maximunStock" type="text" class="form-control" placeholder="Stock máximo" oninput="ValidateElement($(this))" data-repeater-maximunstock />
                                                                        <label class="form-label required" for="maximunStock">Stock máximo</label>
                                                                    </div>
                                                                </div>
                                                                <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                            </div>

                                                            <button class="border border-secondary btn btn-light-danger px-2 align-self-start" data-repeater-delete-classification type="button">
                                                                <i class="ki-duotone ki-trash fs-2">
                                                                    <span class="path1"></span>
                                                                    <span class="path2"></span>
                                                                    <span class="path3"></span>
                                                                    <span class="path4"></span>
                                                                    <span class="path5"></span>
                                                                </i>
                                                            </button>
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex mb-10">
           
                                        <button id="addContractDirectBtn" class="border border-secondary btn btn-lg btn-light-primary ms-2" data-repeater-create-classification type="button">
                                            <span class="indicator-label">Agregar</span>
                                        </button>
                                    </div>


                                    <!--begin::Actions-->
                                    <div class="d-flex flex-stack">
                                        <button type="button" class="btn btn-lg btn-danger" data-kt-element="step2-previous">Atrás</button>
                                        <button type="button" class="btn btn-lg btn-primary" data-kt-element="step2-next">
                                            <span class="indicator-label">Siguiente</span>
                                            <span class="indicator-progress">
                                                Por favor, espera...
                                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                            </span>
                                        </button>
                                    </div>
                                    <!--end::Actions-->
                                </div>
                            </div>
                            <!--end::Step 2-->
                            <!--begin::Step 3 : CONFIGURACION DE ALMACENES-->
                            <div data-kt-stepper-element="content">
                                <div class="w-100">
                                    <!--begin::Label-->
                                    <label class="d-flex align-items-center fs-5 fw-semibold mb-4">
                                        <span>¿Que tamaño tienen los palets que maneja en su negocio?</span>
                                        <span class="ms-1" data-bs-toggle="tooltip" title="Ingresar informacion de palets">
                                            <i class="ki-duotone ki-information-5 text-gray-500 fs-6">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                                <span class="path3"></span>
                                            </i>
                                        </span>
                                    </label>
                                    <div class="row">
                                        <div class="col-lg-6 mb-3 mb-lg-0">
                                            <div class="input-group">
                                                <div class="form-floating">
                                                    <input id="palletLenght" name="PalletLength" required data-validation="required,decimal" type="text" class="form-control" placeholder="Largo" oninput="ValidateElement($(this))" />
                                                    <label class="form-label required" for="palletLenght">Largo (metros)</label>
                                                </div>
                                            </div>
                                            <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                        </div>
                                        <div class="col-lg-6 mb-3">
                                            <div class="input-group">
                                                <div class="form-floating">
                                                    <input id="palletWidth" name="PalletWidth" required data-validation="required, decimal" type="text" class="form-control" placeholder="Ancho" oninput="ValidateElement($(this))" />
                                                    <label class="form-label" for="palletWidth">Ancho (metros)</label>
                                                </div>
                                            </div>
                                            <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                        </div>
                                    </div>
                                    <label class="d-flex align-items-center fs-5 fw-semibold mb-4">
                                        <span>Define todos los almacenes que se van a gestionar en su negocio</span>
                                        <span class="ms-1" data-bs-toggle="tooltip" title="Ingresar informacion de palets">
                                            <i class="ki-duotone ki-information-5 text-gray-500 fs-6">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                                <span class="path3"></span>
                                            </i>
                                        </span>
                                    </label>
                                    <div class="inner-repeater-warehouse">
                                        <div data-repeater-list-warehouse="kt_docs_repeater_nested_inner">
                                            <!-- repeater principal-->
                                            <div data-repeater-item-warehouse>
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span class="h5">1</span></div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseName" type="text" required data-validation="required" class="form-control" placeholder="Nombre del almacén" oninput="ValidateElement($(this))" data-repeater-warehousename />
                                                                <label class="form-label required" for="warehouseName">Nombre del almacen</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseDescription" type="text" required data-validation="required" class="form-control" placeholder="Descripción" oninput="ValidateElement($(this))" data-repeater-warehousedescription />
                                                                <label class="form-label required" for="warehouseDescription">Descripción</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseLength" type="text" required data-validation="required,decimal" class="form-control" placeholder="Largo" oninput="ValidateElement($(this))" data-repeater-warehouselength />
                                                                <label class="form-label required" for="warehouseLength">Largo</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseWidth" type="text" required data-validation="required,decimal" class="form-control" placeholder="Ancho" oninput="ValidateElement($(this))" data-repeater-warehousewidth />
                                                                <label class="form-label required" for="warehouseWidth">Ancho</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseHeight" type="text" required data-validation="required,decimal" class="form-control" placeholder="Alto" oninput="ValidateElement($(this))" data-repeater-warehouseheight />
                                                                <label class="form-label required" for="warehouseHeight">Alto</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseRow" type="text" required data-validation="required,numeric" class="form-control" placeholder="Largo" oninput="ValidateElement($(this))" data-repeater-warehouserow />
                                                                <label class="form-label required" for="warehouseRow">Filas</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseColumn" type="text" required data-validation="required,numeric" class="form-control" placeholder="Ancho" oninput="ValidateElement($(this))" data-repeater-warehousecolumn />
                                                                <label class="form-label required" for="warehouseColumn">Columnas</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- repeater con boton de eliminar-->
                                            <div data-repeater-item-warehouse style="display: none;">
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span id="numeration" class="h5">1</span></div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseName" type="text" class="form-control" placeholder="Nombre del almacén" oninput="ValidateElement($(this))" data-repeater-warehousename />
                                                                <label class="form-label required" for="warehouseName">Nombre del almacen</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseDescription" type="text" class="form-control" placeholder="Descripción" oninput="ValidateElement($(this))" data-repeater-warehousedescription />
                                                                <label class="form-label required" for="warehouseDescription">Descripción</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseLength" type="text" class="form-control" placeholder="Largo" oninput="ValidateElement($(this))" data-repeater-warehouselength />
                                                                <label class="form-label required" for="warehouseLength">Largo</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseWidth" type="text" class="form-control" placeholder="Ancho" oninput="ValidateElement($(this))" data-repeater-warehousewidth />
                                                                <label class="form-label required" for="warehouseWidth">Ancho</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseHeight" type="text" class="form-control" placeholder="Alto" oninput="ValidateElement($(this))" data-repeater-warehouseheight />
                                                                <label class="form-label required" for="warehouseHeight">Alto</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="warehouseRow" type="text" class="form-control" placeholder="Filas" oninput="ValidateElement($(this))" data-repeater-warehouserow />
                                                                <label class="form-label required" for="warehouseRow">Filas</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="d-flex gap-2">
                                                            <div class="flex-grow-1">
                                                                <div class="input-group">
                                                                    <div class="form-floating">
                                                                        <input id="warehouseColumn" type="text" class="form-control" placeholder="Columnas" oninput="ValidateElement($(this))" data-repeater-warehousecolumn />
                                                                        <label class="form-label required" for="warehouseColumn">Columnas</label>
                                                                    </div>
                                                                </div>
                                                                <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                            </div>

                                                            <button class="border border-secondary btn btn-light-danger px-2 align-self-start" data-repeater-delete-warehouse type="button">
                                                                <i class="ki-duotone ki-trash fs-2">
                                                                    <span class="path1"></span>
                                                                    <span class="path2"></span>
                                                                    <span class="path3"></span>
                                                                    <span class="path4"></span>
                                                                    <span class="path5"></span>
                                                                </i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex mb-10">
                                        <button class="border border-secondary btn btn-lg btn-light-primary ms-2" data-repeater-create-warehouse type="button">
                                            <span class="indicator-label">Agregar</span>
                                        </button>
                                    </div>

                                    <!--begin::Actions-->
                                    <div class="d-flex flex-stack">
                                        <button type="button" class="btn btn-lg btn-danger" data-kt-element="step2-previous">Atrás</button>
                                        <button type="button" class="btn btn-lg btn-primary" data-kt-element="step2-next">
                                            <span class="indicator-label">Siguiente</span>
                                            <span class="indicator-progress">
                                                Por favor, espera...
                                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                            </span>
                                        </button>
                                    </div>
                                    <!--end::Actions-->
                                </div>
                            </div>
                            <!--end::Step 3-->
                            <!--begin::Step 4 : OTRAS ZONAS Y FINALIZACION DEL PROCESO-->
                            <div data-kt-stepper-element="content">
                                <div class="w-100">
                                    <!--begin::Input group-->
                                    <label class="d-flex align-items-center fs-5 fw-semibold mb-4">
                                        <span>Define las otras zonas a parte de los almacenes donde se pueden ubicar los lotes</span>
                                        <span class="ms-1" data-bs-toggle="tooltip" title="Define las otras zonas">
                                            <i class="ki-duotone ki-information-5 text-gray-500 fs-6">
                                                <span class="path1"></span>
                                                <span class="path2"></span>
                                                <span class="path3"></span>
                                            </i>
                                        </span>
                                    </label>
                                    <div class="inner-repeater-otherzone">
                                        <div data-repeater-list-otherzone="kt_docs_repeater_nested_inner">
                                            <!-- repeater principal-->
                                            <div data-repeater-item-otherzone>
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span class="h5">1</span></div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneName" type="text" required data-validation="required" class="form-control" placeholder="Nombre de la zona" oninput="ValidateElement($(this))" data-repeater-otherzonename />
                                                                <label class="form-label required" for="otherZoneName">Nombre de la zona</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneDescription" type="text" required data-validation="required" class="form-control" placeholder="Descripción" oninput="ValidateElement($(this))" data-repeater-otherzonedescription />
                                                                <label class="form-label required" for="otherZoneDescription">Descripción</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneLength" type="text" required data-validation="required,decimal" class="form-control" placeholder="Largo" oninput="ValidateElement($(this))" data-repeater-otherzonelength />
                                                                <label class="form-label required" for="otherZoneLength">Largo</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneWidth" type="text" required data-validation="required,decimal" class="form-control" placeholder="Ancho" oninput="ValidateElement($(this))" data-repeater-otherzonewidth />
                                                                <label class="form-label required" for="otherZoneWidth">Ancho</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneHeight" type="text" required data-validation="required,decimal" class="form-control" placeholder="Alto" oninput="ValidateElement($(this))" data-repeater-otherzoneheight />
                                                                <label class="form-label required" for="otherZoneHeight">Alto</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>

                                            </div>
                                            <!-- repeater con boton de eliminar-->
                                            <div data-repeater-item-otherzone style="display: none;">
                                                <div class="separator separator-dotted separator-content border-dark my-10"><span id="numeration" class="h5">1</span></div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneName" type="text" class="form-control" placeholder="Nombre de la zona" oninput="ValidateElement($(this))" data-repeater-otherzonename />
                                                                <label class="form-label required" for="otherZoneName">Nombre de la zona</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneDescription" type="text" class="form-control" placeholder="Descripción" oninput="ValidateElement($(this))" data-repeater-otherzonedescription />
                                                                <label class="form-label required" for="otherZoneDescription">Descripción</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneLength" type="text" class="form-control" placeholder="Largo" oninput="ValidateElement($(this))" data-repeater-otherzonelength />
                                                                <label class="form-label required" for="otherZoneLength">Largo</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="input-group">
                                                            <div class="form-floating">
                                                                <input id="otherZoneWidth" type="text" class="form-control" placeholder="Ancho" oninput="ValidateElement($(this))" data-repeater-otherzonewidth />
                                                                <label class="form-label required" for="otherZoneWidth">Ancho</label>
                                                            </div>
                                                        </div>
                                                        <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                    </div>
                                                    <div class="col-lg-4 mb-3">
                                                        <div class="d-flex gap-2">
                                                            <div class="flex-grow-1">
                                                                <div class="input-group">
                                                                    <div class="form-floating">
                                                                        <input id="otherZoneHeight" type="text" class="form-control" placeholder="Alto" oninput="ValidateElement($(this))" data-repeater-otherzoneheight />
                                                                        <label class="form-label required" for="otherZoneHeight">Alto</label>
                                                                    </div>
                                                                </div>
                                                                <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                                            </div>

                                                            <button class="border border-secondary btn btn-light-danger px-2 align-self-start" data-repeater-delete-otherzone type="button">
                                                                <i class="ki-duotone ki-trash fs-2">
                                                                    <span class="path1"></span>
                                                                    <span class="path2"></span>
                                                                    <span class="path3"></span>
                                                                    <span class="path4"></span>
                                                                    <span class="path5"></span>
                                                                </i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex mb-10">
                                        <button class="border border-secondary btn btn-lg btn-light-primary ms-2" data-repeater-create-otherzone type="button">
                                            <span class="indicator-label">Agregar</span>
                                        </button>
                                    </div>
                                    
                                    <!--end::Input group-->
                                    <!--begin::Actions-->
                                    <div class="d-flex flex-stack">
                                        <button type="button" class="btn btn-lg btn-danger" data-kt-element="step3-previous">Atrás</button>
                                        <button type="button" id="submitButton" class="btn btn-lg btn-primary" data-kt-element="finish-create">
                                            <span id="btnGuardar" class="indicator-label">Crear</span>
                                            <span class="indicator-progress">
                                                Por favor, espera...
                                                <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                            </span>
                                        </button>
                                    </div>
                                    <!--end::Actions-->
                                </div>

                            </div>
                            <!--end::Step 4-->
                        </form>
                        <!--end::Form-->
                    </div>
                    <!--end::Content-->
                </div>
                <!--end::Stepper-->
            </div>
            <!--end::Modal body-->
        </div>
        <!--end::Modal content-->
    </div>
    <!--end::Modal dialog-->
</div>
<!--end: Modal - Create App-->

<!--begin::Page loading(append to body)-->
<div class="page-loader flex-column bg-dark bg-opacity-25">
	<span class="spinner-border text-primary" role="status"></span>
	<span class="text-gray-800 fs-6 fw-semibold mt-5">Loading...</span>
</div>
<!--end::Page loading-->


@if (TempData.ContainsKey("SuccessMessage"))
{
    @await Html.PartialAsync("_Alert", new AlertModel("success", "Éxito" ,TempData["SuccessMessage"]?.ToString() ?? string.Empty ))
}
@if (TempData.ContainsKey("ErrorMessage"))
{
    @await Html.PartialAsync("_Alert", new AlertModel("error", "Error" ,TempData["ErrorMessage"]?.ToString() ?? string.Empty ))
}