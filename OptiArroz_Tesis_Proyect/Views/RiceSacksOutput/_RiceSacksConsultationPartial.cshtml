@model OptiArroz_Tesis_Proyect.Models.ViewModels.RiceSacksConsultationVM
@using OptiArroz_Tesis_Proyect.Models.Utils

@{
    ViewData["Title"] = "Consulta de sacos";
}
<style>
    /* Modal que se desliza desde el lado derecho */
    .modal.right .modal-dialog {
        position: fixed;
        margin: auto;
        width: 400px; /* Ajusta este valor para el ancho del modal */
        height: 100%;
        right: 0;
        top: 0;
        transform: translateX(100%);
        transition: transform 0.3s ease-out;
    }

    .modal.right.show .modal-dialog {
        transform: translateX(0);
    }

    /* Estilo para asegurar que el modal ocupe todo el alto */
    .modal-fullscreen {
        height: 100%;
    }

</style>
<!--begin:: INICIALIZACION DE COMPONENTES-->
<script>
    // Reinicializar menús
    document.querySelectorAll('[data-kt-menu="true"]').forEach(element => {
        const menu = KTMenu.getInstance(element);
        if (menu) {
            menu.destroy();
        }
        new KTMenu(element);
    });


    // Reinicializar tooltips
    document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(element => {
        const tooltip = bootstrap.Tooltip.getInstance(element);
        if (tooltip) {
            tooltip.dispose();
        }
        new bootstrap.Tooltip(element);
    });
</script>
<script>
   

    $("#kt_riceSacksConsultation_app_form").submit(function (e) {
        e.preventDefault();

        var form = $(this);
        if(validateForm(form)){
            $('#loadingSpinner').css('display', 'block');
            $('#kt_datatable_zero_RiceSacksConsultationTable').hide();

            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    $('#loadingSpinner').hide();
                    $('#kt_datatable_zero_RiceSacksConsultationTable').show();
                    $("#RiceSacksConsultationSection").html(response);
                },
                error: function () {
                    $('#loadingSpinner').hide();
                    $('#kt_datatable_zero_RiceSacksConsultationTable').show();
                    console.log("Error al actualizar la tabla.");
                }
            });
        }
            
        
    });

    //funcion para validar stepper
    function validateForm(form) {
        var inputs = form.find('input[required], select[required]');
        var isValid = true;

        inputs.each(function () {
            var element = $(this);
            if (!element.val() || element.hasClass('invalid')) {
                var parentDiv = element.closest('.input-group');
                isValid = false;
                element.addClass('invalid');
                parentDiv.next('.invalid-feedback').show();
            } else {
                var parentDiv = element.closest('.input-group');
                element.removeClass('invalid');
                parentDiv.next('.invalid-feedback').hide();
            }
        });

        return isValid;

    }
</script>
<script>
    var ConsultationReview = [];

    function AddConsultation() {
        // Obtener los datos de la tabla
        const tableData = extractTableData();

        // Filtrar los registros que ya existen y actualizar sus cantidades
        tableData.forEach(newItem => {
            const existingIndex = ConsultationReview.findIndex(item => item.code === newItem.code);
            if (existingIndex !== -1) {
                // Si el registro ya existe, actualizar la cantidad
                ConsultationReview[existingIndex].quantitySelected = newItem.quantitySelected;
            } else {
                // Si es un nuevo registro, agregarlo
                ConsultationReview.push(newItem);
            }
        });

        updateCardsAndSummary();

        // Mostrar el modal
        const modal = new bootstrap.Modal(document.getElementById('files_modal'));
        modal.show();
    }

    function updateCardsAndSummary() {
        // Generar las cards
        const cardsContainer = document.getElementById('consultationCards');
        cardsContainer.innerHTML = '';

        ConsultationReview.forEach((item, index) => {
            const card = `
                <div class="card shadow-sm mb-3">
                    <div class="card-body p-5">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div class="fw-bold fs-5">${item.code}</div>
                            <button class="btn btn-icon btn-sm btn-light-danger" onclick="removeCard(${index})">
                                <i class="ki-duotone ki-cross fs-2">
                                    <span class="path1"></span>
                                    <span class="path2"></span>
                                </i>
                            </button>
                        </div>
                        <div class="row g-3">
                            <div class="col-6">
                                <div class="d-flex flex-column">
                                    <span class="text-gray-500 fs-7">Clasificación</span>
                                    <span class="text-gray-800 fw-bold fs-7">${item.classification}</span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="d-flex flex-column">
                                    <span class="text-gray-500 fs-7">Vencimiento</span>
                                    <span class="text-gray-800 fw-bold fs-7">${item.expirationDate}</span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="d-flex flex-column">
                                    <span class="text-gray-500 fs-7">Ubicación</span>
                                    <span class="text-gray-800 fw-bold fs-7 text-primary">${item.lastUbication}</span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="d-flex flex-column">
                                    <span class="text-gray-500 fs-7">Stock Actual</span>
                                    <span class="text-gray-800 fw-bold fs-7">${item.leftoverQuantity}</span>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="d-flex flex-column">
                                    <span class="text-gray-500 fs-7">Cantidad Seleccionada</span>
                                    <input type="number"
                                           class="form-control form-control-solid form-control-sm mt-1"
                                           value="${item.quantitySelected}"
                                           min="0"
                                           max="${item.leftoverQuantity}"
                                           onchange="updateQuantity(${index}, this.value)">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`;

            cardsContainer.innerHTML += card;
        });

        updateSummary();
    }

    function updateSummary() {
        // Actualizar el resumen
        const summary = ConsultationReview.reduce((acc, item) => {
            if (!acc[item.classification]) {
                acc[item.classification] = 0;
            }
            acc[item.classification] += parseInt(item.quantitySelected);
            return acc;
        }, {});

        // Calcular total
        const total = Object.values(summary).reduce((a, b) => a + b, 0);

        // Generar HTML del resumen
        let summaryHtml = '';

        // Agregar cada clasificación
        Object.entries(summary).forEach(([classification, quantity]) => {
            summaryHtml += `
            <div class="d-flex justify-content-between align-items-center mb-2">
                <span class="text-gray-800">${classification}...........</span>
                <span class="text-gray-800 fw-bold">${quantity} unds</span>
            </div>`;
        });

        // Agregar el total
        summaryHtml += `
            <div class="separator my-4"></div>
            <div class="d-flex justify-content-between align-items-center">
                <span class="text-gray-800 fw-bold">TOTAL SACOS:</span>
                <span class="text-gray-800 fw-bolder">${total} unds</span>
            </div>`;

        document.getElementById('summaryContent').innerHTML = summaryHtml;
    }

    function updateQuantity(index, newValue) {
        // Validar que el valor no exceda el stock
        const maxStock = ConsultationReview[index].leftoverQuantity;
        newValue = Math.min(Math.max(0, parseInt(newValue) || 0), maxStock);

        // Actualizar el valor
        ConsultationReview[index].quantitySelected = newValue;

        // Actualizar el resumen
        updateSummary();
    }

    function removeCard(index) {
        // Eliminar el registro del array
        ConsultationReview.splice(index, 1);

        // Actualizar las cards y el resumen
        updateCardsAndSummary();
    }

    function extractTableData() {
        const rows = document.querySelectorAll('#kt_datatable_zero_RiceSacksConsultationTable tbody tr');
        const tableData = [];
    
        rows.forEach(row => {
            const cells = row.querySelectorAll('td');
            const quantitySelected = parseInt(cells[5].querySelector('input').value) || 0;
        
            // Solo procesar filas donde quantitySelected > 0
            if(quantitySelected > 0) {
                const rowData = {
                    code: cells[0].textContent.trim(),
                    expirationDate: cells[1].textContent.trim(),
                    classification: cells[2].textContent.trim(),
                    lastUbication: cells[3].textContent.trim(),
                    leftoverQuantity: parseInt(cells[4].textContent.trim()) || 0,
                    quantitySelected: quantitySelected
                };
            
                tableData.push(rowData);
            }
        });
    
        return tableData;
    }


</script>


<!--begin::Toolbar-->
<div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
    <!--begin::Toolbar container-->
    <div id="kt_app_toolbar_container" class="app-container container-xxl d-flex flex-stack">
        <!--begin::Page title-->
        <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
            <!--begin::Title-->
            <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">Consulta de sacos</h1>
            <!--end::Title-->
            <!--begin::Breadcrumb-->
            <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                <!--begin::Item-->
                <li class="breadcrumb-item text-muted">
                    <a href="/Home/Index" class="text-muted text-hover-primary">Inicio</a>
                </li>
                <!--end::Item-->
                <!--begin::Item-->
                <li class="breadcrumb-item text-muted">
                    -
                </li>
                <!--end::Item-->
                <!--begin::Item-->
                <li class="breadcrumb-item text-muted">
                    <a onclick="Navigate('RiceSacksOutput')" class="text-muted text-hover-primary cursor-pointer">Salida de sacos</a>
                </li>
                <!--end::Item-->

            </ul>
            <!--end::Breadcrumb-->
        </div>
        <!--end::Page title-->
        <!--begin::Actions-->
        <div class="d-flex flex-stack flex-wrap gap-4">
            <!--begin::Filter menu-->
            <div class="m-0">
                <!--begin::Menu toggle-->
                <a href="#" class="btn btn-sm btn-secondary me-2 mb-2" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-start" data-kt-menu-offset="0,5">
                    <i class="ki-duotone ki-filter fs-2 text-muted me-1">
                        <span class="path1"></span>
                        <span class="path2"></span>
                    </i>Consulta
                </a>
                <!--end::Menu toggle-->
                <!--begin::Menu 1-->
                <div class="menu menu-sub menu-sub-dropdown w-300px w-md-350px" data-kt-menu="true" id="filter-menu">
                    <!--begin::Header-->
                    <div class="px-7 py-5 d-flex justify-content-between align-items-center">
                        <div class="fs-5 text-dark fw-bold">Consulta de sacos</div>
                    </div>
                    <!--end::Header-->
                    <!--begin::Menu separator-->
                    <div class="separator border-gray-200"></div>
                    <!--end::Menu separator-->
                    <!--begin::Form-->
                    <form asp-controller="RiceSacksOutput" asp-action="GetLotsConsultationResult" method="post" class="row g-3 needs-validation" novalidate="novalidate" id="kt_riceSacksConsultation_app_form">
                        <div class="px-7 py-5">
                            <!--begin::Status Input group-->
                            <div class="mb-5">
                                <div class="input-group">
                                    <div class="form-floating">
                                        <select id="IdClassification" name="IdClassification" class="form-select" required data-validation="required" oninput="ValidateElement($(this))">
                                            <option value="">Seleccione una clasificación de arroz</option>
                                            @foreach (var item in Model.RiceClassifications)
                                            {
                                                <option value="@item.IdClassification">
                                                    @item.Name
                                                </option>
                                            }
                                        </select>
                                        <label class="form-label" for="riceClass">Clasificación</label>
                                    </div>
                                </div>
                                <!-- Mensaje de feedback inmediatamente después del input-group -->
                                <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                <!--end::Input-->
                            </div>
                            <!--end::Input group-->
                            <!--begin::Revision Input group-->
                            <div class="mb-5">
                                <!--begin::Input-->
                                <div class="input-group">
                                    <div class="form-floating">
                                        <input id="QuantitySelected" name="QuantitySelected" type="text" required data-validation="required,numeric" class="form-control" placeholder="Cantidad de sacos" oninput="ValidateElement($(this))" />
                                        <label class="form-label required" for="QuantitySelected">Cantidad de sacos</label>
                                    </div>
                                </div>
                                <div class="invalid-feedback"> Este campo es obligatorio.</div>
                                <!--end::Input-->
                            </div>
                            <!--end::Input group-->
                            <!--begin::Actions-->
                            <div class="d-flex justify-content-end">
                                <button onclick="resetFilters()" class="btn btn-sm btn-light btn-active-light-primary me-2" data-kt-menu-dismiss="true">Reiniciar</button>
                                <button class="btn btn-sm btn-primary" data-kt-menu-dismiss="true" data-kt-element="finish-finish">Aplicar</button>
                            </div>
                            <!--end::Actions-->
                        </div>
                    </form>
                    <!--end::Form-->
                </div>
                <!--end::Menu 1-->
            </div>
            <!--end::Filter menu-->
            <a id="btnOpenModal" onclick="AddConsultation()" class="btn btn-sm btn-success me-2 mb-2">
                <i class="ki-duotone ki-plus fs-2"></i>Resultado 
            </a>
        </div>
        <!--end::Actions-->
    </div>
    <!--end::Toolbar container-->
</div>
<!--end::Toolbar-->
<!--begin::Content-->
<div id="kt_app_content" class="app-content flex-column-fluid">


    <!--begin::Content container-->
    <div id="kt_app_content_container" class="app-container container-xxl" style="margin-bottom:15px;">

        <!--begin::Card-->
        <div class="card card-flush">
            <!--begin::Card body-->
            <div id="RiceSacksConsultationSection" class="card-body">
                @await Html.PartialAsync("_RiceSacksConsultationTablePartial", Model)
            </div>
            <!--end::Card body-->
        </div>
        <!--end::Card-->
    </div>
    <!--end::Content container-->
</div>
<!--end::Content-->

<div class="app-engage " id="kt_app_engage">
    <!--begin::Files toggle-->
    <a data-bs-target="#files_modal"
       class="app-engage-btn border-hover-success hover-scale cursor-pointer"
       data-bs-toggle="modal"
       data-bs-placement="left"
       data-bs-title="Ver resumen de consulta">
        <i class="fa-solid fa-file-lines fs-2x pt-1 mb-2 text-success"></i>
    </a>
    </a>
    <!--end::Files toggle-->
    <!--begin::Files toggle-->
    <a class="app-engage-btn border-hover-primary hover-scale cursor-pointer"
       onclick=""
       data-bs-toggle="tooltip"
       data-bs-placement="left"
       data-bs-title="Ver resumen desde móvil">
        <i class="fa-solid fa-mobile-screen fs-2x pt-1 mb-2 text-primary" ></i>
    </a>
    <!--end::Files toggle-->
</div>


<!-- Modal -->
<div class="modal right fade" id="files_modal" tabindex="-1" aria-labelledby="files_modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-body px-10">
                <!-- Cards Container -->
                <div id="consultationCards" class="d-flex flex-column gap-4">
                    <!-- Las cards se generarán aquí dinámicamente -->
                </div>
            </div>
            <div class="modal-footer px-10">
                <!-- Resumen directo en el footer -->
                <div class="w-100">
                    <h4 class="fw-bold mb-5">RESUMEN</h4>
                    <div id="summaryContent">
                        <!-- El resumen se generará aquí dinámicamente -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>